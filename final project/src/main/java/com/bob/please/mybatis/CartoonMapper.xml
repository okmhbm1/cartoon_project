<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cartoon">
      
      
      <insert id="naver_insert" parameterType="cartoondto">
INSERT INTO cartoon (days,title,description,painter,point,likes,hit,detail_url,image_url,portal,regdate) 
VALUES (#{days},#{title},#{description},#{painter},0,0,0,#{detail_url},#{image_url},'naver',now()) 
ON DUPLICATE KEY UPDATE days=#{days},title=#{title},description=#{description},painter=#{painter},point=0,likes=0,hit=0,detail_url=#{detail_url},image_url=#{image_url},portal='naver',regdate=now()
      </insert>
      
      <insert id="naver_insert2" parameterType="cartoondto">
INSERT INTO cartoon (days,title,description,painter,point,likes,hit,detail_url,image_url,category,portal,regdate) 
VALUES (#{days},#{title},#{description},#{painter},0,0,0,#{detail_url},#{image_url},#{category},'zzam',now()) 
ON DUPLICATE KEY UPDATE days=#{days},title=#{title},description=#{description},painter=#{painter},point=0,likes=0,hit=0,detail_url=#{detail_url},category=#{category},image_url=#{image_url},portal='zzam',regdate=now()
      </insert>
      
   <!-- 전체 리스트 보기 -->
      <select id="selectlist" parameterType="cartoondto" resultType="cartoondto">
         select num,days,title,point,likes,image_url,portal,regdate,category
         FROM cartoon
         
         <where>
               <if test="portal_filter == 1">
                   portal = 'naver'
               </if>
               <if test="portal_filter == 2">
                 portal = 'zzam'
               </if>
                  <if test="portal_filter ==3">
                  portal = 'naver' or portal ='zzam'
               </if>
            </where>  
            
      </select>
      
      
      <!-- 성별 종합 추천+점수 순위별 필터 -->
      
      <select id="select_sort_by_recommend" parameterType="selectcartooninfodto" resultType="selectcartooninfodto">
        select a.*, sum(b.point)/count(a.num)+a.likes grades, b.gender gender from cartoon as a join 
 		cartoon_point as b on a.num=b.cartoon_num group by num order by grades desc;
 		
 		<where>
               <if test="portal_filter == 1">
                   portal = 'naver'
               </if>
               <if test="portal_filter == 2">
                 portal = 'zzam'
               </if>
                  <if test="portal_filter ==3">
                  portal = 'naver' or portal ='zzam'
               </if>
            </where>
            
      </select>
      
      
      <!-- 성별 추천+점수 순위별 필터 -->
      
      <select id="select_sort_by_gender" parameterType="selectcartooninfodto" resultType="selectcartooninfodto">
      		select a.*, sum(b.point)/count(a.num)+a.likes grades, b.gender gender from 
			cartoon as a join cartoon_point as b on a.num=b.cartoon_num group by b.gender,a.num
			<where>
               <if test="portal_filter == 1">
                   portal = 'naver'
               </if>
               <if test="portal_filter == 2">
                 portal = 'zzam'
               </if>
                  <if test="portal_filter ==3">
                  portal = 'naver' or portal ='zzam'
               </if>
            </where>
      </select>
      
      
      
        <!-- 장르별 분류 보기 -->
      <select id="selectcategory" parameterType="cartoondto" resultType="cartoondto">
      select num,days,title,point,likes,image_url,portal,regdate,category 
      from cartoon
      
      <where>
               <if test="portal_filter == 1">
                   portal = 'naver'
               </if>
               <if test="portal_filter == 2">
                 portal = 'zzam'
               </if>
                  <if test="portal_filter ==3">
                  portal = 'naver' or portal ='zzam'
               </if>
            </where>
            
            group by title  
      </select>
     
      
      <!-- 만호 선택 후 detail -->
      <select id="selectdetail" parameterType="int" resultType="cartoondto">
         select num,days,title,description,painter,point,likes,hit,detail_url,image_url,regdate
         FROM cartoon
         WHERE num=#{num}
      </select>
      
      
      <!-- 만화 detail 읽을 때마다 조회수 update -->
      <update id="update_hit" parameterType="int">
         update cartoon set hit=hit+1 where num=#{num}
      </update>
      
      
      <select id="select_hit" parameterType="int" resultType="int">
         select hit from cartoon where num=#{num}
      </select>
      
     <!-- 관리자 페이지에서 카테고리 업데이트 -->
    
      <update id="updatecategory" parameterType="cartoondto">
         update cartoon set category=#{category} where title=#{title}
      </update>
    
      <!-- 여기부터는 cartooncomentdto -->      
     <insert id="insertpoint" parameterType="cartooncommentdto">
        insert into cartoon_point(cartoon_num,userid,point,comment,gender,age)
        value(#{cartoon_num},#{userid},#{point},#{comment},(select gender from member where userid=#{userid}),(select age from member where userid=#{userid}))
     
     </insert>
     
     <select id="selectcartoonpointlist" parameterType="cartooncommentdto" resultType="cartooncommentdto">
        select cartoon_num,userid,point,good,notgood,comment from cartoon_point where cartoon_num=#{cartoon_num}</select>            

     <select id="is_selected" parameterType="string" resultType="int">
         select COALESCE(count(*),0) from onelike_or_dislike where userid=#{userid}     
     </select>
     
     <!-- 특정 아이디로 추천을 했는지 확인 -->
     <select id="is_recommend_selected" parameterType="cartoonlikedto" resultType="int">
           select COALESCE(count(*),0) from cartoon_recomm where userid=#{userid} and cartoon_num=#{cartoon_num}
     </select>
     
     <!-- 특정 만화가 특정 회원에게 링크되었는가 -->
     <select id="is_linked" parameterType="memberlinkdto" resultType="int">
           select COALESCE(count(*),0) from member_link where userid=#{userid} and cartoon_num=#{cartoon_num}
     </select>
     
     <!-- 즐겨찾기 데이터 입력-->
     <insert id="insert_member_link" parameterType="memberlinkdto">
     		insert into member_link (cartoon_num,days,userid,detail_url) value(#{cartoon_num},#{days},#{userid},#{detail_url})
     </insert>
     
     <select id="select_member_link_all" parameterType="memberlinkdto" resultType="memberlinkdto">
     		select num,days,cartoon_num,userid,detail_url from member_link where userid=#{userid}
     </select>
     
     <update id="updategood" parameterType="cartooncommentdto">
           update cartoon_point set good=good+1 where cartoon_num=#{cartoon_num} and userid=#{userid}
     </update>
     
     <update id="updatebad" parameterType="cartooncommentdto">
           update cartoon_point set notgood=notgood+1 where cartoon_num=#{cartoon_num} and userid=#{userid}
     </update>
     
     <!-- 특정 유저가 만화를 좋아하는지 체크 -->
     <insert id="insertlike" parameterType="likeordislikedto">
           insert into onelike_or_dislike(cartoon_num,userid,is_selected) value(#{cartoon_num},#{userid},#{is_selected})
     </insert>
     
     	<!-- 추천 데이터 입력, gender도 넣어야함 -->
     <select id="insert_recomm" parameterType="cartoonlikedto">
           insert into cartoon_recomm(cartoon_num,userid,recomm,gender,age) 
           value(#{cartoon_num},#{userid},1,(select gender from member where userid=#{userid}),(select age from member where age=#{age}))
     </select>
     
     <update id="update_likes" parameterType="int">
           update cartoon set likes=likes+1 where num=#{cartoon_num} 
     </update>
     
     <select id="search" parameterType="string" resultType="cartoondto">
      select num,detail_url,image_url,title from cartoon where title LIKE CONCAT('%',#{title},'%')
     </select>

</mapper>






















